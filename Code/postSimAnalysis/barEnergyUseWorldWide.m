% BARENERGYUSEWORLDWIDE Create a bar graph of the energy inputs for simulated greenhouses in various locations
% Creates a bar graph for of the heating and lighting inputs for HPS and
% LED greenhouses with various climates around the world
% Used to create Figure 6 in: 
%   Katzin, D., Marcelis, L. F. M., & van Mourik, S. (2021). 
%   Energy savings in greenhouses by transition from high-pressure sodium 
%   to LED lighting. Applied Energy, 281, 116019. 
%   https://doi.org/10.1016/j.apenergy.2020.116019

% David Katzin, Wageningen University
% david.katzin@wur.nl
% david.katzin1@gmail.com

% Set directories for loading data
currentFile = mfilename('fullpath');
currentFolder = fileparts(currentFile);
outputFolder = strrep(currentFolder, '\GreenLight\Code\postSimAnalysis', ...
    '\GreenLight\Output\referenceSetting\');
    % The last line may need to be modified, depending where the model 
    % output is saved
    % The path should include simulation results, with the following format
    % for the file names: <location>_<lampType>_<optionalMoreInfo>
    % Each location should have both HPS and LED lamp type

files = dir(outputFolder);
files = files(3:end);

fileNum = length(files);

labels = cell(fileNum,1);
in = nan(fileNum, 3);
out = nan(fileNum, 6);
savings = nan(floor(fileNum/2),1);
yield = nan(fileNum, 1);
par = nan(fileNum, 1);
co2mean = nan(fileNum, 1);
co2inj = nan(fileNum, 1);

%% collect data from each simulation
for k=1:fileNum
    fprintf('%d / %d... ',k,fileNum);
    load([outputFolder files(k).name], 'gl');
    [simIn, simOut] = energyAnalysis(gl);

    in(k,:) = simIn; % [sunIn heatIn lampIn]
    out(k,:) = simOut;
    label = files(k).name;
    underScores = find(label == '_');
    labels{k} = label(1:underScores(1)-1);

    yield(k) = trapz(gl.a.mcFruitHar)*1e-6/0.06; % kg fw/m2
    par(k) = trapz(gl.a.parCan)*1e-6; % mol PAR/m2
    co2mean(k) = mean(gl.a.co2InPpm); % ppm 
    co2inj(k) = 1e-6*trapz(gl.a.mcExtAir); % kg/m2

    if mod(k,2) == 0
        savings(k/2) = 100*(1-(in(k,2)+in(k,3))/(in(k-1,2)+in(k-1,3)));
    end
end
fprintf('\n');

% get list of locations
for k=1:length(labels)
    name = labels{k};
    locations{k} = upper(name);
end

% space out inputs
originalIn = in;
for k=2:2:length(in)
    in = [in(1:k+(k/2)-1,:); zeros(1,3); in(k+(k/2):end,:)];
end

%% Create bar graph
%  Auto-generated by MATLAB on 12-Oct-2020 13:26:11

% Create figure
figure('InvertHardcopy','off','PaperUnits','points','Color',[1 1 1],...
    'OuterPosition',[672 575 723 447]);

% Create axes
axes1 = axes;
hold(axes1,'on');

b = bar(in(:,[2 3]), 'stacked'); % heatIn lampIn
xticks(1.5:3:44.5)
xticklabels(locations(1:2:end))
grid;
legend('Heating','Lighting');
yticks(0:250:3500);
ylabel('Energy input (MJ m^{-2} year^{-1})');

precision = 0;
numFormat = ['%.' num2str(precision) 'f'];
yOffset = -100;
xOffset = -0.05;
for k=1:length(b(1).YData)
    if b(1).YData(k)>0
        ht=text(xOffset+b(1).XData(k),yOffset+b(1).YData(k)/2,num2str(b(1).YData(k),numFormat),'FontSize',7);
        set(ht,'Rotation',90)
        ht=text(xOffset+b(1).XData(k),yOffset+b(1).YData(k)+b(2).YData(k)/2,num2str(b(2).YData(k),numFormat),'FontSize',7);
        set(ht,'Rotation',90)
    end
end

cc = lines(100); % default MATLAB colors
set(b(1),'DisplayName','Heating',...
    'FaceColor',cc(2,:));
set(b(2),'DisplayName','Lighting',...
    'FaceColor',cc(1,:));

box(axes1,'on');
grid(axes1,'on');
set(axes1,'FontSize',7);

% Create legend
legend1 = legend(axes1,'show');
set(legend1,'FontSize',7);